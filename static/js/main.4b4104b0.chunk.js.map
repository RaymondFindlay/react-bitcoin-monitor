{"version":3,"sources":["components/BitcoinMonitor.js","App.js","index.js"],"names":["BitcoinMonitor","coinData","datePriceObj","bpi","labels","chartData","date","push","data","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","App","useState","setCoinData","fetchingError","setFetchingError","fetchCoinData","a","fetch","json","then","res","catch","err","console","log","useEffect","toLocaleString","style","height","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA8CeA,EA3CQ,WAAoB,IAAnBC,EAAkB,uDAAP,GAEzBC,EAAeD,EAASA,SAASE,IACjCC,EAAS,GACTC,EAAY,GAElB,IAAK,IAAIC,KAAQJ,EACbE,EAAOG,KAAKD,GACZD,EAAUE,KAAKL,EAAaI,IAGhC,IAAME,EAAO,CACTJ,OAAQA,EACRK,SAAU,CACN,CACIC,MAAO,wBACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBnB,KAAMH,KAKlB,OACI,kBAAC,IAAD,CAAMG,KAAMA,KCDLoB,G,OArCH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACT5B,EADS,KACC6B,EADD,OAE0BD,mBAAS,IAFnC,mBAETE,EAFS,KAEMC,EAFN,KAIVC,EAAa,uCAAG,sBAAAC,EAAA,sEACCC,MAAM,0DADP,cAGbC,OACJC,MAAK,SAAAC,GACJR,EAAYQ,MACXC,OAAM,SAAAC,GACPC,QAAQC,IAAIF,GACZR,EAAiBQ,MARD,2CAAH,qDAgBnB,OAJAG,qBAAU,WACRV,OAIA,6BAEIF,EAEE,6BACGA,EAAca,kBAGjB,yBAAKC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,MAChC,kBAAC,EAAD,CAAgB9C,SAAUA,QC7BtC+C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4b4104b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst BitcoinMonitor = (coinData = []) => {\r\n\r\n    const datePriceObj = coinData.coinData.bpi;\r\n    const labels = [];\r\n    const chartData = [];\r\n\r\n    for (let date in datePriceObj) {\r\n        labels.push(date);\r\n        chartData.push(datePriceObj[date])\r\n    }\r\n\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: '31 Day Bitcoin Report',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: chartData,\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Line data={data} />\r\n    );\r\n};\r\n\r\nexport default BitcoinMonitor;\r\n","import React, { useEffect, useState } from 'react';\nimport BitcoinMonitor from './components/BitcoinMonitor'\nimport './App.css';\n\nconst App = () => {\n  const [coinData, setCoinData] = useState({});\n  const [fetchingError, setFetchingError] = useState(\"\");\n\n  const fetchCoinData = async () => {\n    const result = await fetch(\"https://api.coindesk.com/v1/bpi/historical/close.json/\");\n\n    result.json()\n      .then(res => {\n        setCoinData(res);\n      }).catch(err => {\n        console.log(err);\n        setFetchingError(err);\n      });\n  };\n\n  useEffect(() => {\n    fetchCoinData();\n  });\n\n  return (\n    <div>\n      {\n        fetchingError\n          ?\n          <div>\n            {fetchingError.toLocaleString()}\n          </div>\n          :\n          <div style={{ height: 400, width: 900 }}>\n            <BitcoinMonitor coinData={coinData} />\n          </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}